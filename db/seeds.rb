# encoding: utf-8

attach_image = ->(book) do
  cover_path = Rails.root.join("lib", "assets", "book_covers", "book_#{book.id}.jpg")

  if File.exist?(cover_path)
    book.image.attach(
      io: File.open(cover_path),
      filename: "book_#{book.id}.jpg",
      content_type: 'image/jpeg'
    )
    puts "‚úÖ ƒê√£ th√™m ·∫£nh b√¨a cho s√°ch #{book.id}: #{book.title}"
  else
    puts "‚ö†Ô∏è  Ch∆∞a c√≥ ·∫£nh b√¨a cho s√°ch #{book.id}: #{book.title} (ƒë∆∞·ªùng d·∫´n: #{cover_path})"
  end
end

puts "üå± ƒêang t·∫°o d·ªØ li·ªáu m·∫´u cho h·ªá th·ªëng th∆∞ vi·ªán..."

puts "üßπ ƒêang x√≥a d·ªØ li·ªáu c≈©..."
[Review, Favorite, BorrowRequestItem, BorrowRequest, BookCategory, Book, Category, Author, Publisher, User].each(&:destroy_all)

puts "üìö ƒêang t·∫°o th·ªÉ lo·∫°i s√°ch..."
categories = [
  { name: "Ti·ªÉu thuy·∫øt", description: "T√°c ph·∫©m vƒÉn h·ªçc d√†i" },
  { name: "Khoa h·ªçc", description: "S√°ch v·ªÅ c√°c ch·ªß ƒë·ªÅ khoa h·ªçc" },
  { name: "L·∫≠p tr√¨nh", description: "S√°ch d·∫°y l·∫≠p tr√¨nh" },
  { name: "Kinh t·∫ø", description: "S√°ch v·ªÅ kinh t·∫ø, t√†i ch√≠nh" },
  { name: "L·ªãch s·ª≠", description: "S√°ch v·ªÅ l·ªãch s·ª≠" },
  { name: "T√¢m l√Ω h·ªçc", description: "S√°ch v·ªÅ t√¢m l√Ω con ng∆∞·ªùi" },
  { name: "Truy·ªán ng·∫Øn", description: "T·∫≠p h·ª£p c√°c truy·ªán ng·∫Øn" },
  { name: "Trinh th√°m", description: "Truy·ªán trinh th√°m, h√¨nh s·ª±" },
  { name: "Fantasy", description: "Th·ªÉ lo·∫°i gi·∫£ t∆∞·ªüng" },
  { name: "Thi·∫øu nhi", description: "S√°ch d√†nh cho tr·∫ª em" },
  { name: "K·ªπ nƒÉng", description: "S√°ch ph√°t tri·ªÉn b·∫£n th√¢n" },
  { name: "VƒÉn h√≥a", description: "S√°ch v·ªÅ vƒÉn h√≥a c√°c n∆∞·ªõc" }
].map { |cat| Category.create!(cat) }

puts "üë®‚Äçüíº ƒêang t·∫°o t√†i kho·∫£n admin..."
admin = User.create!(
  name: "Qu·∫£n tr·ªã vi√™n",
  email: "admin@thuvien.com",
  password: "123456",
  password_confirmation: "123456",
  date_of_birth: Date.new(1990, 1, 1),
  gender: "male",
  role: "admin",
)

puts "üë• ƒêang t·∫°o ng∆∞·ªùi d√πng th∆∞·ªùng..."
users = [
  { name: "Nguy·ªÖn VƒÉn An", email: "22026555@vnu.edu.vn", gender: "male", dob: "1990-01-12" },
  { name: "Tr·∫ßn Th·ªã Hoa", email: "tranthihoa@example.com", gender: "female", dob: "1992-03-25" },
  { name: "L√™ VƒÉn Minh", email: "levanminh@example.com", gender: "male", dob: "1988-07-09" },
  { name: "Ph·∫°m Th·ªã H·ªìng", email: "phamthihong@example.com", gender: "female", dob: "1995-10-14" },
  { name: "Ho√†ng VƒÉn Quang", email: "hoangvanquang@example.com", gender: "male", dob: "1991-06-18" },
  { name: "ƒê·ªó Th·ªã Lan", email: "dothilan@example.com", gender: "female", dob: "1993-04-02" },
  { name: "B√πi VƒÉn Nam", email: "buivannam@example.com", gender: "male", dob: "1989-08-30" },
  { name: "V≈© Th·ªã Mai", email: "vuthimai@example.com", gender: "female", dob: "1996-12-21" },
  { name: "Ng√¥ VƒÉn Kh√°nh", email: "ngovankhanh@example.com", gender: "male", dob: "1994-05-11" },
  { name: "ƒê·∫∑ng Th·ªã Y·∫øn", email: "dangthiyen@example.com", gender: "female", dob: "1990-09-27" },
  { name: "Tr·ªãnh VƒÉn H√πng", email: "trinhvanhung@example.com", gender: "male", dob: "1992-02-14" },
  { name: "L∆∞∆°ng Th·ªã H·∫°nh", email: "luongthihanh@example.com", gender: "female", dob: "1997-11-08" },
  { name: "Phan VƒÉn Tu·∫•n", email: "phanvantuan@example.com", gender: "male", dob: "1987-03-19" },
  { name: "T·∫° Th·ªã Thu", email: "tathithu@example.com", gender: "female", dob: "1995-07-23" },
  { name: "Nguy·ªÖn VƒÉn L√¢m", email: "nguyenvanlam@example.com", gender: "male", dob: "1991-10-05" },
  { name: "Tr·∫ßn Th·ªã V√¢n", email: "tranthivan@example.com", gender: "female", dob: "1989-01-28" },
  { name: "L√™ VƒÉn Ho√†ng", email: "levanhoang@example.com", gender: "male", dob: "1993-06-17" },
  { name: "Ph·∫°m Th·ªã Th·∫£o", email: "phamthithao@example.com", gender: "female", dob: "1994-08-12" },
  { name: "Ho√†ng VƒÉn D≈©ng", email: "hoangvandung@example.com", gender: "male", dob: "1988-05-03" },
  { name: "ƒê·ªó Th·ªã Ng·ªçc", email: "dothingoc@example.com", gender: "female", dob: "1992-12-15" },
  { name: "B√πi VƒÉn To√†n", email: "buivantoan@example.com", gender: "male", dob: "1990-07-19" },
  { name: "V≈© Th·ªã Kim", email: "vuthikim@example.com", gender: "female", dob: "1996-03-07" },
  { name: "Ng√¥ VƒÉn Huy", email: "ngovanhuy@example.com", gender: "male", dob: "1991-09-14" },
  { name: "ƒê·∫∑ng Th·ªã Nhung", email: "dangthinhung@example.com", gender: "female", dob: "1987-11-30" },
  { name: "Tr·ªãnh VƒÉn Ph√∫c", email: "trinhvanphuc@example.com", gender: "male", dob: "1994-04-28" },
  { name: "L∆∞∆°ng Th·ªã Thanh", email: "luongthithanh@example.com", gender: "female", dob: "1993-08-16" },
  { name: "Phan VƒÉn H√≤a", email: "phanvanhoa@example.com", gender: "male", dob: "1989-02-09" },
  { name: "T·∫° Th·ªã H∆∞∆°ng", email: "tatihuong@example.com", gender: "female", dob: "1995-06-22" },
  { name: "Nguy·ªÖn VƒÉn Phong", email: "nguyenvanphong@example.com", gender: "male", dob: "1990-10-18" },
  { name: "Tr·∫ßn Th·ªã T√¢m", email: "tranthitam@example.com", gender: "female", dob: "1992-01-26" }
].map do |u|
  User.create!(
    name: u[:name],
    email: u[:email],
    password: "123456",
    password_confirmation: "123456",
    gender: u[:gender],
    date_of_birth: Date.parse(u[:dob]),
  )
end

puts "‚úçÔ∏è ƒêang t·∫°o t√°c gi·∫£..."
authors = [
  { name: "Nguy·ªÖn Nh·∫≠t √Ånh", nationality: "Vi·ªát Nam", birth_date: "1955-05-07" },
  { name: "J.K. Rowling", nationality: "Anh", birth_date: "1965-07-31" },
  { name: "Stephen King", nationality: "M·ªπ", birth_date: "1947-09-21" },
  { name: "Haruki Murakami", nationality: "Nh·∫≠t B·∫£n", birth_date: "1949-01-12" },
  { name: "Paulo Coelho", nationality: "Brazil", birth_date: "1947-08-24" },
  { name: "Nguy·ªÖn Ng·ªçc T∆∞", nationality: "Vi·ªát Nam", birth_date: "1976-03-06" },
  { name: "T√¥ Ho√†i", nationality: "Vi·ªát Nam", birth_date: "1920-09-27", death_date: "2014-07-06" },
  { name: "Nam Cao", nationality: "Vi·ªát Nam", birth_date: "1917-10-29", death_date: "1951-11-30" },
  { name: "George Orwell", nationality: "Anh", birth_date: "1903-06-25", death_date: "1950-01-21" },
  { name: "Ernest Hemingway", nationality: "M·ªπ", birth_date: "1899-07-21", death_date: "1961-07-02" }
].map { |a| Author.create!(a) }

puts "üè¢ ƒêang t·∫°o nh√† xu·∫•t b·∫£n..."
publishers = [
  { name: "Nh√† xu·∫•t b·∫£n Tr·∫ª", address: "TP.HCM, Vi·ªát Nam" },
  { name: "Nh√† xu·∫•t b·∫£n Kim ƒê·ªìng", address: "H√† N·ªôi, Vi·ªát Nam" },
  { name: "Penguin Random House", address: "New York, M·ªπ" },
  { name: "HarperCollins", address: "London, Anh" },
  { name: "Simon & Schuster", address: "New York, M·ªπ" },
  { name: "Nh√† xu·∫•t b·∫£n H·ªôi Nh√† VƒÉn", address: "H√† N·ªôi, Vi·ªát Nam" },
  { name: "Nh√† xu·∫•t b·∫£n Ph·ª• N·ªØ", address: "H√† N·ªôi, Vi·ªát Nam" }
].map { |p| Publisher.create!(p) }

puts "üìñ ƒêang t·∫°o 30 cu·ªën s√°ch..."
books = [
  {
    title: "T√¥i th·∫•y hoa v√†ng tr√™n c·ªè xanh",
    description: "C√¢u chuy·ªán tu·ªïi th∆° ·ªü l√†ng qu√™ Vi·ªát Nam",
    publication_year: 2010,
    author: authors[0],
    publisher: publishers[0],
    categories: [categories[9]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "Harry Potter v√† H√≤n ƒë√° Ph√π th·ªßy",
    description: "C√¢u chuy·ªán v·ªÅ c·∫≠u b√© ph√π th·ªßy Harry Potter",
    publication_year: 1997,
    author: authors[1],
    publisher: publishers[2],
    categories: [categories[8]],
    total_quantity: 20,
    available_quantity: 18
  },
  {
    title: "ƒê·∫Øc nh√¢n t√¢m",
    description: "S√°ch v·ªÅ ngh·ªá thu·∫≠t giao ti·∫øp v√† ƒë·ªëi nh√¢n x·ª≠ th·∫ø",
    publication_year: 1936,
    author: authors[4],
    publisher: publishers[3],
    categories: [categories[10]],
    total_quantity: 25,
    available_quantity: 20
  },
  {
    title: "Nh√† gi·∫£ kim",
    description: "H√†nh tr√¨nh ƒëi t√¨m kho b√°u v√† √Ω nghƒ©a cu·ªôc s·ªëng",
    publication_year: 1988,
    author: authors[4],
    publisher: publishers[3],
    categories: [categories[0]],
    total_quantity: 18,
    available_quantity: 15
  },
  {
    title: "R·ª´ng Na Uy",
    description: "Ti·ªÉu thuy·∫øt t√¨nh y√™u v√† n·ªói c√¥ ƒë∆°n",
    publication_year: 1987,
    author: authors[3],
    publisher: publishers[4],
    categories: [categories[0]],
    total_quantity: 12,
    available_quantity: 10
  },
  {
    title: "1984",
    description: "Ti·ªÉu thuy·∫øt dystopian v·ªÅ x√£ h·ªôi to√†n tr·ªã",
    publication_year: 1949,
    author: authors[8],
    publisher: publishers[2],
    categories: [categories[0]],
    total_quantity: 15,
    available_quantity: 13
  },
  {
    title: "D·∫ø M√®n phi√™u l∆∞u k√Ω",
    description: "T√°c ph·∫©m vƒÉn h·ªçc thi·∫øu nhi kinh ƒëi·ªÉn",
    publication_year: 1941,
    author: authors[6],
    publisher: publishers[1],
    categories: [categories[9]],
    total_quantity: 20,
    available_quantity: 18
  },
  {
    title: "S·ªë ƒë·ªè",
    description: "Ti·ªÉu thuy·∫øt tr√†o ph√∫ng v·ªÅ x√£ h·ªôi Vi·ªát Nam ƒë·∫ßu th·∫ø k·ª∑ 20",
    publication_year: 1936,
    author: authors[7],
    publisher: publishers[5],
    categories: [categories[0]],
    total_quantity: 10,
    available_quantity: 8
  },
  {
    title: "ƒêi t√¨m l·∫Ω s·ªëng",
    description: "C√¢u chuy·ªán c·ªßa m·ªôt ng∆∞·ªùi s·ªëng s√≥t t·ª´ tr·∫°i t·∫≠p trung",
    publication_year: 1946,
    author: Author.create!(name: "Viktor Frankl", nationality: "√Åo", birth_date: "1905-03-26", death_date: "1997-09-02"),
    publisher: publishers[4],
    categories: [categories[5]],
    total_quantity: 12,
    available_quantity: 10
  },
  {
    title: "C√† ph√™ c√πng Tony",
    description: "T·∫≠p h·ª£p nh·ªØng b√†i vi·∫øt truy·ªÅn c·∫£m h·ª©ng",
    publication_year: 2015,
    author: Author.create!(name: "Tony Bu·ªïi S√°ng", nationality: "Vi·ªát Nam"),
    publisher: publishers[0],
    categories: [categories[10]],
    total_quantity: 30,
    available_quantity: 25
  },
  {
    title: "Clean Code",
    description: "S√°ch v·ªÅ c√°ch vi·∫øt code s·∫°ch cho l·∫≠p tr√¨nh vi√™n",
    publication_year: 2008,
    author: Author.create!(name: "Robert C. Martin", nationality: "M·ªπ"),
    publisher: publishers[4],
    categories: [categories[2]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "Design Patterns",
    description: "C√°c m·∫´u thi·∫øt k·∫ø trong l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng",
    publication_year: 1994,
    author: Author.create!(name: "Gang of Four", nationality: "M·ªπ"),
    publisher: publishers[4],
    categories: [categories[2]],
    total_quantity: 10,
    available_quantity: 8
  },
  {
    title: "B·ªë gi√†",
    description: "Ti·ªÉu thuy·∫øt v·ªÅ gia ƒë√¨nh mafia Corleone",
    publication_year: 1969,
    author: Author.create!(name: "Mario Puzo", nationality: "M·ªπ"),
    publisher: publishers[2],
    categories: [categories[0]],
    total_quantity: 18,
    available_quantity: 15
  },
  {
    title: "Nh·ªØng ng∆∞·ªùi kh·ªën kh·ªï",
    description: "Ki·ªát t√°c vƒÉn h·ªçc c·ªßa Victor Hugo",
    publication_year: 1862,
    author: Author.create!(name: "Victor Hugo", nationality: "Ph√°p"),
    publisher: publishers[3],
    categories: [categories[4]],
    total_quantity: 12,
    available_quantity: 10
  },
  {
    title: "Sherlock Holmes",
    description: "Tuy·ªÉn t·∫≠p truy·ªán trinh th√°m kinh ƒëi·ªÉn",
    publication_year: 1887,
    author: Author.create!(name: "Arthur Conan Doyle", nationality: "Anh"),
    publisher: publishers[3],
    categories: [categories[7]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "Tr√≠ tu·ªá do th√°i",
    description: "S√°ch v·ªÅ t∆∞ duy v√† c√°ch s·ªëng c·ªßa ng∆∞·ªùi Do Th√°i",
    publication_year: 2010,
    author: Author.create!(name: "Eran Katz", nationality: "Israel"),
    publisher: Publisher.create!(name: "Nh√† xu·∫•t b·∫£n Th·∫ø gi·ªõi", address: "H√† N·ªôi, Vi·ªát Nam"),
    categories: [categories[10]],
    total_quantity: 20,
    available_quantity: 18
  },
  {
    title: "ƒê·ªçc v·ªã b·∫•t k·ª≥ ai",
    description: "S√°ch v·ªÅ t√¢m l√Ω v√† c√°ch ƒë·ªçc suy nghƒ© ng∆∞·ªùi kh√°c",
    publication_year: 2007,
    author: Author.create!(name: "David J. Lieberman", nationality: "M·ªπ"),
    publisher: Publisher.create!(name: "Nh√† xu·∫•t b·∫£n Lao ƒë·ªông", address: "H√† N·ªôi, Vi·ªát Nam"),
    categories: [categories[5]],
    total_quantity: 25,
    available_quantity: 20
  },
  {
    title: "Nh√† l√£nh ƒë·∫°o kh√¥ng ch·ª©c danh",
    description: "S√°ch v·ªÅ ph√°t tri·ªÉn kh·∫£ nƒÉng l√£nh ƒë·∫°o",
    publication_year: 2010,
    author: Author.create!(name: "Robin Sharma", nationality: "Canada"),
    publisher: Publisher.create!(name: "Nh√† xu·∫•t b·∫£n Tr√≠ Vi·ªát", address: "TP.HCM, Vi·ªát Nam"),
    categories: [categories[10]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "Tu·ªïi tr·∫ª ƒë√°ng gi√° bao nhi√™u",
    description: "S√°ch truy·ªÅn c·∫£m h·ª©ng cho gi·ªõi tr·∫ª",
    publication_year: 2016,
    author: Author.create!(name: "Rosie Nguy·ªÖn", nationality: "Vi·ªát Nam"),
    publisher: publishers[0],
    categories: [categories[10]],
    total_quantity: 30,
    available_quantity: 25
  },
  {
    title: "T√¥i ƒëi code d·∫°o",
    description: "H√†nh tr√¨nh tr·ªü th√†nh l·∫≠p tr√¨nh vi√™n",
    publication_year: 2017,
    author: Author.create!(name: "Ph·∫°m Huy Ho√†ng", nationality: "Vi·ªát Nam"),
    publisher: Publisher.create!(name: "Nh√† xu·∫•t b·∫£n Thanh Ni√™n", address: "TP.HCM, Vi·ªát Nam"),
    categories: [categories[2]],
    total_quantity: 20,
    available_quantity: 18
  },
  {
    title: "L∆∞·ª£c s·ª≠ th·ªùi gian",
    description: "S√°ch v·ªÅ v≈© tr·ª• v√† v·∫≠t l√Ω l√Ω thuy·∫øt",
    publication_year: 1988,
    author: Author.create!(name: "Stephen Hawking", nationality: "Anh"),
    publisher: publishers[3],
    categories: [categories[1]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "Sapiens: L∆∞·ª£c s·ª≠ lo√†i ng∆∞·ªùi",
    description: "L·ªãch s·ª≠ ti·∫øn h√≥a c·ªßa lo√†i ng∆∞·ªùi",
    publication_year: 2011,
    author: Author.create!(name: "Yuval Noah Harari", nationality: "Israel"),
    publisher: publishers[3],
    categories: [categories[1]],
    total_quantity: 18,
    available_quantity: 15
  },
  {
    title: "Chi·∫øn tranh v√† h√≤a b√¨nh",
    description: "Ti·ªÉu thuy·∫øt s·ª≠ thi v·ªÅ x√£ h·ªôi Nga th·ªùi Napoleon",
    publication_year: 1869,
    author: Author.create!(name: "Leo Tolstoy", nationality: "Nga"),
    publisher: publishers[2],
    categories: [categories[4]],
    total_quantity: 10,
    available_quantity: 8
  },
  {
    title: "B·∫Øt tr·∫ª ƒë·ªìng xanh",
    description: "Ti·ªÉu thuy·∫øt v·ªÅ tu·ªïi tr·∫ª n·ªïi lo·∫°n",
    publication_year: 1951,
    author: Author.create!(name: "J.D. Salinger", nationality: "M·ªπ"),
    publisher: publishers[2],
    categories: [categories[0]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "√îng gi√† v√† bi·ªÉn c·∫£",
    description: "C√¢u chuy·ªán v·ªÅ l√£o ng∆∞ d√¢n v√† con c√° ki·∫øm",
    publication_year: 1952,
    author: authors[9],
    publisher: publishers[2],
    categories: [categories[0]],
    total_quantity: 12,
    available_quantity: 10
  },
  {
    title: "M·∫Øt bi·∫øc",
    description: "C√¢u chuy·ªán t√¨nh y√™u tu·ªïi h·ªçc tr√≤",
    publication_year: 1990,
    author: authors[0],
    publisher: publishers[0],
    categories: [categories[0]],
    total_quantity: 20,
    available_quantity: 18
  },
  {
    title: "Cho t√¥i xin m·ªôt v√© ƒëi tu·ªïi th∆°",
    description: "H·ªìi ·ª©c v·ªÅ tu·ªïi th∆° v·ªõi nh·ªØng tr√≤ ch∆°i v√† k·ª∑ ni·ªám",
    publication_year: 2008,
    author: authors[0],
    publisher: publishers[0],
    categories: [categories[0]],
    total_quantity: 25,
    available_quantity: 20
  },
  {
    title: "C√°nh ƒë·ªìng b·∫•t t·∫≠n",
    description: "T·∫≠p truy·ªán ng·∫Øn v·ªÅ v√πng ƒë·∫•t Nam B·ªô",
    publication_year: 2005,
    author: authors[5],
    publisher: publishers[6],
    categories: [categories[6]],
    total_quantity: 15,
    available_quantity: 12
  },
  {
    title: "Ch√≠ Ph√®o",
    description: "Ki·ªát t√°c vƒÉn h·ªçc hi·ªán th·ª±c ph√™ ph√°n",
    publication_year: 1941,
    author: authors[7],
    publisher: publishers[5],
    categories: [categories[0]],
    total_quantity: 20,
    available_quantity: 18
  },
  {
    title: "L√£o H·∫°c",
    description: "Truy·ªán ng·∫Øn v·ªÅ s·ªë ph·∫≠n ng∆∞·ªùi n√¥ng d√¢n",
    publication_year: 1943,
    author: authors[7],
    publisher: publishers[5],
    categories: [categories[6]],
    total_quantity: 15,
    available_quantity: 12
  }
].map do |book_data|
  book = Book.create!(
    title: book_data[:title],
    description: book_data[:description],
    publication_year: book_data[:publication_year],
    author: book_data[:author],
    publisher: book_data[:publisher],
    total_quantity: book_data[:total_quantity],
    available_quantity: book_data[:available_quantity],
    borrow_count: book_data[:total_quantity] - book_data[:available_quantity]
  )

  book_data[:categories].each { |cat| book.categories << cat }

  # Attach cover image
  attach_image.call(book)
  book
end

puts "‚≠ê ƒêang t·∫°o ƒë√°nh gi√°..."
reviews = [
  { user: users[0], book: books[0], score: 5, comment: "S√°ch r·∫•t hay, c·∫£m x√∫c d·∫°t d√†o" },
  { user: users[1], book: books[0], score: 4, comment: "ƒê·ªçc m√† nh·ªõ l·∫°i tu·ªïi th∆°" },
  { user: users[2], book: books[1], score: 5, comment: "Ph√π th·ªßy Harry Potter th·∫≠t tuy·ªát v·ªùi" },
  { user: users[0], book: books[2], score: 5, comment: "S√°ch thay ƒë·ªïi cu·ªôc ƒë·ªùi t√¥i" },
  { user: users[3], book: books[3], score: 4, comment: "C√¢u chuy·ªán √Ω nghƒ©a, ƒë√°ng ƒë·ªçc" },
  { user: users[4], book: books[4], score: 3, comment: "H∆°i bu·ªìn nh∆∞ng hay" },
  { user: users[1], book: books[5], score: 5, comment: "ƒê√°ng s·ª£ nh∆∞ng r·∫•t th·ª±c t·∫ø" },
  { user: users[2], book: books[6], score: 5, comment: "Tu·ªïi th∆° c·ªßa t√¥i v·ªõi D·∫ø M√®n" },
  { user: users[3], book: books[7], score: 4, comment: "Ch√¢m bi·∫øm s√¢u s·∫Øc" },
  { user: users[4], book: books[8], score: 5, comment: "Truy·ªÅn c·∫£m h·ª©ng s·ªëng m·∫°nh m·∫Ω" },
  { user: users[0], book: books[9], score: 4, comment: "Gi·ªçng vƒÉn h√†i h∆∞·ªõc, d·ªÖ ƒë·ªçc" },
  { user: users[1], book: books[10], score: 5, comment: "L·∫≠p tr√¨nh vi√™n n√†o c≈©ng n√™n ƒë·ªçc" },
  { user: users[2], book: books[11], score: 5, comment: "Kinh ƒëi·ªÉn v·ªÅ design pattern" },
  { user: users[3], book: books[12], score: 4, comment: "Ti·ªÉu thuy·∫øt mafia hay nh·∫•t" },
  { user: users[4], book: books[13], score: 5, comment: "Ki·ªát t√°c vƒÉn h·ªçc th·∫ø gi·ªõi" }
].map { |r| Review.create!(r) }

puts "‚≠ê ƒêang t·∫°o y√™u th√≠ch..."
favorites = []
(1..30).each do |user_id|
  liked_books = [
    ((user_id - 1) % 30) + 1,
    ((user_id + 4) % 30) + 1,
    ((user_id + 9) % 30) + 1
  ]

  liked_books.each do |book_id|
    favorites << {
      user_id: user_id,
      favorable_type: "Book",
      favorable_id: book_id,
      created_at: Time.now,
      updated_at: Time.now
    }
  end
end

Favorite.insert_all(favorites)
puts "üìã ƒêang t·∫°o y√™u c·∫ßu m∆∞·ª£n s√°ch..."

# Generate 200 borrow requests with various statuses and realistic dates
200.times do |i|
  user_id = users.sample.id
  request_date = rand(60.days).seconds.ago
  start_date = request_date.to_date + rand(1..7).days
  end_date = start_date + rand(7..30).days

  # Determine status based on dates and randomization
  status = if end_date < Date.current && rand < 0.1
             [:overdue, :expired].sample
           elsif start_date < Date.current && rand < 0.3
             [:borrowed, :returned].sample
           elsif request_date.to_date < Date.current && rand < 0.2
             [:approved, :rejected].sample
           else
             :pending
           end

  # Set dates based on status with proper validation
  approved_date = nil
  actual_borrow_date = nil
  actual_return_date = nil

  if status.in?([:approved, :borrowed, :returned, :overdue])
    # Approved date must be after request date and before start date
    approved_date = [request_date.to_date + rand(1..3).days, start_date - 1.day].min
  end

  if status.in?([:borrowed, :returned, :overdue])
    # Actual borrow date must be after start date and after approved date
    min_borrow_date = [start_date, approved_date].compact.max
    actual_borrow_date = min_borrow_date + rand(0..2).days

    # Ensure actual_borrow_date is not after end_date for validation
    actual_borrow_date = [actual_borrow_date, end_date - 1.day].min
  end

  if status == :returned
    # Actual return date must be after actual_borrow_date and not in the future
    min_return_date = actual_borrow_date + 1.day
    max_return_date = [end_date + rand(1..10).days, Date.current - 1.day].min

    # Only set return date if we have a valid range
    if min_return_date <= max_return_date
      actual_return_date = min_return_date + rand(0..(max_return_date - min_return_date).to_i).days
    else
      # If we can't set a valid return date, change status to borrowed
      status = :borrowed
      actual_return_date = nil
    end
  end

  # Admin assignments
  admin_id = status.in?([:approved, :borrowed, :returned, :overdue]) ? admin.id : nil
  rejected_admin_id = status == :rejected ? admin.id : nil

  begin
    borrow_request = BorrowRequest.create!(
      user_id: user_id,
      request_date: request_date,
      status: status,
      start_date: start_date,
      end_date: end_date,
      actual_return_date: actual_return_date,
      admin_note: status == :rejected ? "Kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán m∆∞·ª£n s√°ch" : nil,
      approved_by_admin_id: admin_id,
      rejected_by_admin_id: rejected_admin_id,
      returned_by_admin_id: status == :returned ? admin.id : nil,
      borrowed_by_admin_id: status.in?([:borrowed, :returned, :overdue]) ? admin.id : nil,
      approved_date: approved_date,
      actual_borrow_date: actual_borrow_date
    )

    # Create 1-3 borrow request items per request
    num_books = rand(1..3)
    selected_books = books.sample(num_books)

    selected_books.each do |book|
      BorrowRequestItem.create!(
        borrow_request_id: borrow_request.id,
        book_id: book.id,
        quantity: 1
      )
    end

    # Update book quantities for borrowed/overdue books
    if status.in?([:borrowed, :overdue])
      selected_books.each do |book|
        book.update!(
          available_quantity: [book.available_quantity - 1, 0].max,
          borrow_count: book.borrow_count + 1
        )
      end
    end
  rescue ActiveRecord::RecordInvalid => e
    puts "‚ö†Ô∏è  Skipping invalid borrow request #{i + 1}: #{e.message}"
    next
  end
end

puts "üéâ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u!"
puts "üìä Th·ªëng k√™:"
puts "- üìö S√°ch: #{Book.count}"
puts "- ‚úçÔ∏è T√°c gi·∫£: #{Author.count}"
puts "- üè¢ Nh√† xu·∫•t b·∫£n: #{Publisher.count}"
puts "- üè∑Ô∏è Th·ªÉ lo·∫°i: #{Category.count}"
puts "- üë• Ng∆∞·ªùi d√πng: #{User.count}"
puts "- ‚≠ê ƒê√°nh gi√°: #{Review.count}"
puts "- üìã Y√™u c·∫ßu m∆∞·ª£n s√°ch: #{BorrowRequest.count}"
puts "- üìñ Chi ti·∫øt m∆∞·ª£n s√°ch: #{BorrowRequestItem.count}"

# Display borrow request statistics
puts "\nüìã Th·ªëng k√™ y√™u c·∫ßu m∆∞·ª£n s√°ch:"
BorrowRequest.statuses.each do |status, _|
  count = BorrowRequest.where(status: status).count
  puts "- #{status.humanize}: #{count}"
end

puts "\nüîë Th√¥ng tin ƒëƒÉng nh·∫≠p:"
puts "- Admin: admin@thuvien.com / 123456"
puts "- Ng∆∞·ªùi d√πng th∆∞·ªùng: nguyenvana@example.com / 123456, tranthib@example.com / 123456,..."

puts "\nüìå L∆∞u √Ω:"
puts "1. ƒê·ªÉ th√™m ·∫£nh b√¨a, ƒë·∫∑t file ·∫£nh v√†o th∆∞ m·ª•c lib/assets/book_covers/ v·ªõi t√™n book_[id].jpg"
puts "2. Ch·∫°y rails db:seed ƒë·ªÉ c·∫≠p nh·∫≠t ·∫£nh b√¨a sau khi th√™m file ·∫£nh"
